esphome:
  name: test-interface
  friendly_name: Test Interface

esp32:
  board: esp32s3box
  framework:
    type: arduino
    version: latest
    
external_components:
  - source: github://pr#4793
    components: [ tt21100 ]
  - source: github://pr#4861
    components: [ es8311 ]
  - source: github://rpatel3001/esphome@es7210
    components: [ es7210 ]

# Enable logging
logger:
  level: ERROR

# Enable Home Assistant API
api:
  encryption:
    key: "61wlgnSpQfK3XLYl5qqa8fVTgj110jb/pOaVMm9Tk60="

ota:
  password: "6cf03d8862949099f41ec1ac71d3892f"


wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Test-Interface Fallback Hotspot"
    password: "w3MEXjx7XpBN"

sensor:
  - platform: homeassistant
    name: ha_water_power
    entity_id: sensor.water_pump_power
    id: ha_water_power
  - platform: homeassistant
    name: ha_phone_battery
    entity_id: sensor.zack_s_phone_battery_level
    id: ha_phone_battery
  - platform: homeassistant
    name: ha_hot_air
    entity_id: sensor.shellymotion2_8cf681a1fa80_temperature
    id: ha_hot_air

text_sensor:
  - platform: homeassistant
    name: test_ha
    entity_id: sensor.shellymotion2_8cf681a1fa80_temperature
    id: test_ha
    
time:
  - platform: sntp
    id: time_sntp

output:
#  - platform: ledc
#    id: rgb_red
#    pin: GPIO39
#  - platform: ledc
#    id: rgb_green
#    pin: GPIO40
#  - platform: ledc
#    id: rgb_blue
#    pin: GPIO41
  - platform: ledc
    pin: GPIO45
    id: lcd_backlight

  - platform: ac_dimmer
    id: dimmer1
    gate_pin: GPIO40
    method: leading
    zero_cross_pin:
      number: GPIO39
      mode:
        input: true
      inverted: yes



light:
#  - platform: rgb
#    name: RGB LED
#    red: rgb_red
#    green: rgb_green
#    blue: rgb_blue
#    effects:
#      - random:
#          transition_length: 700ms
#          update_interval: 700ms
#      - flicker:
#          alpha: 95%
#          intensity: 100%
#      - strobe:
#      - pulse:
#          transition_length: 100ms
#          update_interval: 100ms    


  - platform: monochromatic
    output: dimmer1
    name: Chandelier
    effects:
      - random:
          transition_length: 100ms
          update_interval: 100ms
      - flicker:
          alpha: 95%
          intensity: 10%
      - flicker:
          name: Lantern
          alpha: 100%
          intensity: .2%
      - strobe:
      - pulse:
          transition_length: 0ms
          update_interval: 20ms    

  - platform: monochromatic
    output: lcd_backlight
    name: "LCD Backlight"
    restore_mode: ALWAYS_ON

    
spi:
  clk_pin: GPIO7
  mosi_pin: GPIO6

color:
  - id: green
    red: 0%
    green: 100%
    blue: 0%
    white: 0%
  - id: purple
    red: 100%
    green: 0%
    blue: 100%
    white: 0%
  - id: black
    red: 0%
    green: 0%
    blue: 0%
    white: 0%
  - id: yellow
    red: 100%
    green: 100%
    blue: 0%
    white: 0%
graph:
  - id: phone_graph
    duration: 3h
    width: 240
    height: 110
    border: False
    max_value: 110
    min_value: 50
    # x_grid: 10min
    # y_grid: 4.5
    traces:
      - sensor: ha_hot_air
        line_type: DOTTED
        line_thickness: 2
        color: yellow

  - id: phone_graph_2
    duration: 3h
    width: 240
    height: 110
    border: False
    max_value: 110
    min_value: 50
    # x_grid: 10min
    # y_grid: 4.5
    traces:
      - sensor: ha_hot_air
        line_type: SOLID
        line_thickness: 10
        color: black

  - id: phone_graph_3
    duration: 3h
    width: 240
    height: 110
    border: False
    max_value: 110
    min_value: 50
    # x_grid: 10min
    # y_grid: 4.5
    traces:
      - sensor: ha_hot_air
        line_type: DOTTED
        line_thickness: 3
        color: purple

display:
  - platform: ili9xxx
    model: s3box
    cs_pin: GPIO5
    dc_pin: GPIO4
    reset_pin: GPIO48
    id: lcd
    auto_clear_enabled: false
    rotation: 90
    update_interval: 5s
    # Width = 320, Height = 240
    lambda: |-
      auto bg = Color(0, 0, 0);
      auto text = Color(0, 255, 0);
      it.fill(bg);
      auto red = Color(255, 0, 0);
      auto green = Color(0, 255, 0);
      auto blue = Color(0, 0, 255);
      auto black = Color(0, 0, 0);
      auto gray = Color(128, 128, 128);
      auto brown = Color(139, 69, 19);
      auto white = Color(255, 255, 255);

      it.image(0, 0, id(mic_mute_icon), ImageAlign::TOP_LEFT);
      it.printf(0, 160, id(font_small), TextAlign::TOP_LEFT, "%s", id(test_ha).state.c_str());
      it.graph(0, 210, id(phone_graph_2));
      it.graph(0, 210, id(phone_graph));
      it.graph(2, 210, id(phone_graph_3));


      if (id(muted).state) {
        it.image(0, 0, id(voice_icon), ImageAlign::TOP_LEFT);
        it.strftime(240, 0, id(font_large), text, TextAlign::TOP_RIGHT, "%I:%M", id(time_sntp).now());
        it.strftime(240, 37, id(font_medium), text, TextAlign::TOP_RIGHT, "%a", id(time_sntp).now());
        it.strftime(240, 67, id(font_small), text, TextAlign::TOP_RIGHT, "%b %e", id(time_sntp).now());
        it.printf(0, 160, id(font_small), TextAlign::TOP_LEFT, "%s", id(test_ha).state.c_str());

      }
      if (id(ext_speaker).is_muted()) {
        it.image(320, 0, id(mute_icon), ImageAlign::TOP_RIGHT, text);
      }
      if (id(voice_asst)->is_running()) {
        it.image(0, 0, id(voice_icon), ImageAlign::TOP_LEFT);
      }

font:
  - file: "gfonts://VT323@400"
    id: font_large
    size: 50
    glyphs: "0123456789:APM."
  - file: "gfonts://VT323@400"
    id: font_medium
    size: 40
  - file: "gfonts://VT323@400"
    id: font_small
    size: 28

image:
  - file: mdi:volume-off
    id: mute_icon
    resize: 40x40
  - file: megan3.png
    id: mic_mute_icon
    resize: 240x320
    type: RGB565
  - file: kim.png
    id: voice_icon
    resize: 240x320
    type: RGB565

i2c:
  scl: GPIO18
  sda: GPIO8
  scan: true

touchscreen:
  - platform: tt21100
    address: 0x24
    interrupt_pin: GPIO3
    # Don't use as the reset pin is shared with the display, so the ili9xxx will perform the reset
    #reset_pin: GPIO48

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: true
    id: settings
    name: "Settings"
    on_press:
      - voice_assistant.start:
    on_release:
      - voice_assistant.stop:
  - platform: gpio
    pin:
      number: GPIO1
      inverted: true
    id: muted
    name: "Muted"
  - platform: tt21100
    name: "Home"
    index: 0
  - platform: touchscreen
    name: "Red"
    x_min: 10
    x_max: 70
    y_min: 170
    y_max: 230
    on_press:
      - voice_assistant.start:
  - platform: touchscreen
    name: "Green"
    x_min: 130
    x_max: 190
    y_min: 170
    y_max: 230
  - platform: touchscreen
    name: "Blue"
    x_min: 250
    x_max: 310
    y_min: 170
    y_max: 230
    on_press:
      - voice_assistant.stop:
i2s_audio:
  i2s_lrclk_pin: GPIO47
  i2s_bclk_pin: GPIO17
  i2s_mclk_pin: GPIO2

es8311:
  address: 0x18

# mutually exclusive with media_player
#speaker:
#  - platform: i2s_audio
#    id: ext_speaker
#    dac_type: external
#    i2s_dout_pin: GPIO15
#    mode: mono

media_player:
  - platform: i2s_audio
    name: Media Player
    id: ext_speaker
    dac_type: external
    i2s_dout_pin: GPIO15
    mute_pin:
      number: GPIO46
      inverted: true

es7210:
  address: 0x40

microphone:
  - platform: i2s_audio
    id: ext_mic
    adc_type: external
    pdm: false
    i2s_din_pin: GPIO16
    bits_per_sample: 16bit

voice_assistant:
  id: voice_asst
  microphone: ext_mic
  media_player: ext_speaker

# i2c device at address 0x18 - ES8311 Audio Codec
# i2c device at address 0x24 - TT21100 Touchscreen
# i2c device at address 0x40 - ES7210 Mic ADC
# i2c device at address 0x68 - ICM-42607-P IMU
    
